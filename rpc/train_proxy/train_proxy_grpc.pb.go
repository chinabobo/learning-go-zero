// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: common/proto/train_proxy.proto

package train_proxy

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TrainProxySrv_CreateTask_FullMethodName = "/train_proxy.TrainProxySrv/CreateTask"
)

// TrainProxySrvClient is the client API for TrainProxySrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TrainProxySrvClient interface {
	CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error)
}

type trainProxySrvClient struct {
	cc grpc.ClientConnInterface
}

func NewTrainProxySrvClient(cc grpc.ClientConnInterface) TrainProxySrvClient {
	return &trainProxySrvClient{cc}
}

func (c *trainProxySrvClient) CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error) {
	out := new(CreateTaskResp)
	err := c.cc.Invoke(ctx, TrainProxySrv_CreateTask_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainProxySrvServer is the server API for TrainProxySrv service.
// All implementations must embed UnimplementedTrainProxySrvServer
// for forward compatibility
type TrainProxySrvServer interface {
	CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error)
	mustEmbedUnimplementedTrainProxySrvServer()
}

// UnimplementedTrainProxySrvServer must be embedded to have forward compatible implementations.
type UnimplementedTrainProxySrvServer struct {
}

func (UnimplementedTrainProxySrvServer) CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (UnimplementedTrainProxySrvServer) mustEmbedUnimplementedTrainProxySrvServer() {}

// UnsafeTrainProxySrvServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TrainProxySrvServer will
// result in compilation errors.
type UnsafeTrainProxySrvServer interface {
	mustEmbedUnimplementedTrainProxySrvServer()
}

func RegisterTrainProxySrvServer(s grpc.ServiceRegistrar, srv TrainProxySrvServer) {
	s.RegisterService(&TrainProxySrv_ServiceDesc, srv)
}

func _TrainProxySrv_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainProxySrvServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainProxySrv_CreateTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainProxySrvServer).CreateTask(ctx, req.(*CreateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

// TrainProxySrv_ServiceDesc is the grpc.ServiceDesc for TrainProxySrv service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TrainProxySrv_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "train_proxy.TrainProxySrv",
	HandlerType: (*TrainProxySrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TrainProxySrv_CreateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common/proto/train_proxy.proto",
}
